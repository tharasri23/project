import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class StudentForm {

    // Database credentials
    static final String URL = "jdbc:mysql://localhost:3306/student_db";
    static final String USER = "root";  // Change if needed
    static final String PASS = "root";  // Change if needed

    public static void StudentInfo() {

        JFrame f = new JFrame("Student Details Form");

        JLabel l1, l2, l3, l4, l5;
        JTextField t1, t2, t3;
        JComboBox<String> j1, j2;
        JButton b1, b2;

        // Labels
        l1 = new JLabel("Student Name:");
        l1.setBounds(50, 50, 100, 30);
        l2 = new JLabel("College Email ID:");
        l2.setBounds(50, 120, 120, 30);
        l3 = new JLabel("Branch:");
        l3.setBounds(50, 190, 100, 30);
        l4 = new JLabel("Section:");
        l4.setBounds(420, 50, 70, 30);
        l5 = new JLabel("Mobile No:");
        l5.setBounds(420, 120, 70, 30);

        // Text Fields
        t1 = new JTextField();
        t1.setBounds(150, 50, 130, 30);
        t2 = new JTextField();
        t2.setBounds(160, 120, 130, 30);
        t3 = new JTextField();
        t3.setBounds(490, 120, 130, 30);

        // ComboBoxes
        String[] branches = {"", "CSE", "ECE", "EEE", "CIVIL", "MEC", "Others"};
        String[] sections = {"", "Section-A", "Section-B", "Section-C", "Section-D", "Section-E"};

        j1 = new JComboBox<>(branches);
        j1.setBounds(120, 190, 100, 30);

        j2 = new JComboBox<>(sections);
        j2.setBounds(470, 50, 140, 30);

        // Buttons
        b1 = new JButton("Save");
        b1.setBounds(150, 300, 70, 30);

        b2 = new JButton("Close");
        b2.setBounds(420, 300, 70, 30);

        // Save Button - Data Insertion Logic
        b1.addActionListener(e -> {
            String name = t1.getText().trim();
            String email = t2.getText().trim();
            String branch = j1.getSelectedItem().toString();
            String section = j2.getSelectedItem().toString();
            String mobile = t3.getText().trim();

            // Validation
            if (name.isEmpty() || email.isEmpty() || branch.isEmpty() || section.isEmpty() || mobile.isEmpty()) {
                JOptionPane.showMessageDialog(f, "All fields are required!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!email.matches("^[A-Za-z0-9+_.-]+@(.+)$")) {
                JOptionPane.showMessageDialog(f, "Invalid Email Address!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!mobile.matches("\\d{10}")) {
                JOptionPane.showMessageDialog(f, "Invalid Mobile Number! Enter a 10-digit number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Database Insertion Logic
            try (Connection con = DriverManager.getConnection(URL, USER, PASS)) {
                String query = "INSERT INTO students (name, email, branch, section, mobile) VALUES (?, ?, ?, ?, ?)";

                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, name);
                pst.setString(2, email);
                pst.setString(3, branch);
                pst.setString(4, section);
                pst.setString(5, mobile);

                int rowsAffected = pst.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(f, "Details Successfully Saved!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(f, "Failed to Save Details!", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(f, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        // Close Button Logic
        b2.addActionListener(e -> f.dispose());

        // Frame Configuration
        f.add(l1); f.add(t1);
        f.add(l2); f.add(t2);
        f.add(l3); f.add(j1);
        f.add(l4); f.add(j2);
        f.add(l5); f.add(t3);
        f.add(b1); f.add(b2);

        f.setLayout(null);
        f.setSize(700, 600);
        f.setVisible(true);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    // Driver Code
    public static void main(String[] args) {
        // Load MySQL Driver
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "MySQL Driver not found!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        StudentInfo();
    }
}


